% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/append_edge.R
\name{append_edge}
\alias{append_edge}
\title{Fit an Edge in CNQR}
\usage{
append_edge(vtr, vval, ucondtr, ucondval, tau, QY = identity,
  g = identity, wtau = NULL, prev_cops = NULL, prev_cpars = NULL,
  refit_all = 0, families = c("indepcop", "bvncop", "bvtcop", "mtcj",
  "gum", "frk", "joe", "bb1"))
}
\arguments{
\item{vtr, vval}{Vector of uniform scores of the response. \code{vtr}
is the training data, and \code{vval} is the validation data.}

\item{ucondtr, ucondval}{Matrix of conditional predictor cdfs,
obtained by \code{\link{pcondseq}}.}

\item{tau}{Vector of quantile indices to score on.}

\item{QY}{Vectorized function of the marginal quantile function of the
response (which is assumed to be the same for all observations).}

\item{g}{Vectorized function to use for transformation of variables
before estimation. Fed into \code{\link{scoreq}}. If you wish to
differentially transform each observation, you can optionally make this
a list of two such functions -- the first function will be applied to
the training set, the second to the validation set.}

\item{wtau}{Vectorized function indicating the weight over quantile indices,
used for estimation. Fed into \code{\link{scoreq}}. \code{NULL} for equal
weights (of 1).}

\item{prev_cops}{Vector of copula names that link previous predictors
in the pairing order with the response. \code{NULL} if you're adding
the first predictor in a chain.}

\item{prev_cpars}{List of copula parameters corresponding to
\code{prev_cops}.}

\item{refit_all}{Should previous copula models be re-fit? Either \code{0},
\code{1}, or \code{2} -- see details.}

\item{families}{Vector of copula family names to try fitting in
the new edge.}
}
\value{
A list with the following entries:

\enumerate{
     \item \code{$cops}: Vector of copula family names in the pairing
     order, up until (and including) the one just fitted.
     \item \code{$cpars}: List of fitted copula parameters corresponding
     to the copula families in \code{$cops}.
     \item \code{$scoretr}: The score on the training set.
     \item \code{$scoreval}: The score on the validation set.
}
}
\description{
Append an edge in the PCBN forecaster that fits a validation set best.
}
\details{
Here are the codes for the \code{refit_all} argument.

\itemize{
     \item \code{0}: Do not modify the previously fitted copulas.
     \item \code{1}: Once a copula model is chosen for the new edge, then
     re-estimate the previous copula parameters along with the new one.
     \item \code{2}: Re-estimate the previous copula parameters along with
     each candidate copula model for the new edge.
}
}
\note{
The "base" forecaster for which a new predictor is being added
is determined by \code{prev_cops} and \code{prev_cpars}. That means the
\code{ucond}'s can be wider than the number of "base" copulas.
}
\examples{
library(CopulaModel)
set.seed(13)
n <- 100
u <- runif(n)
uval <- runif(n)
v <- qcondbvtcop(runif(n), u, c(0.9, 10))
vval <- qcondbvtcop(runif(n), uval, c(0.9, 10))
append_edge(v, vval, matrix(u), matrix(uval), tau=space_taus(10))

## Try fitting a copula in the second position in the pairing order.
#### Without refitting previous copulas
u2 <- runif(n)
u2val <- runif(n)
append_edge(v, vval,
            matrix(c(u, u2), ncol=2),
            matrix(c(uval, u2val), ncol=2), tau=space_taus(10),
            prev_cops="bvtcop", prev_cpars=list(c(0.9, 10)))
#### Refit previous copulas after selecting new copula.
append_edge(v, vval,
            matrix(c(u, u2), ncol=2),
            matrix(c(uval, u2val), ncol=2), tau=space_taus(10),
            prev_cops="bvtcop", prev_cpars=list(c(0.9, 10)),
            refit_all=1)
#### Refit previous copulas with each candidate copula.
append_edge(v, vval,
            matrix(c(u, u2), ncol=2),
            matrix(c(uval, u2val), ncol=2), tau=space_taus(10),
            prev_cops="bvtcop", prev_cpars=list(c(0.9, 10)),
            refit_all=2)
}
