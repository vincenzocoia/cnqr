% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gpd_muplot.R
\name{gpd_muplot}
\alias{gpd_muplot}
\title{Plot of CNQR score over GPD threshold}
\usage{
gpd_muplot(ytr, yval, sc, from = NULL, to = NULL, qlims = c(0.5,
  0.95), ...)
}
\arguments{
\item{ytr}{Vector of training data.}

\item{yval}{Vector of validation data.}

\item{sc}{Scoring rule to use, as in the output of \code{\link{scorer}}.}

\item{from, to}{Single numeric. Plotting bounds for the threshold parameter;
overrides the corresponding \code{qlims}. \code{NULL} to use \code{qlims}
instead.}

\item{qlims}{Vector of length 2 of quantile levels (between 0 and 1). The
corresponding empirical quantiles are used as plotting bounds for
the threshold parameter (unless the corresponding \code{from} and/or
\code{to} is specified).}

\item{...}{other arguments to pass to the \code{\link{curve}} function.}
}
\value{
The output of \code{\link{curve}}, with \code{x} values being
values of the GPD threshold, and \code{y} values being the estimated
mean CNQR score.
}
\description{
Estimates the mean CNQR scores of mixture generalized Pareto
distributions (GPD) across various choices of the threshold parameter. Here,
a "mixture GPD" is an empirical distribution having a GPD tail.
}
\details{
This function estimates the mean CNQR scores of distributions having an ecdf
base and generalized Pareto distribution (GPD) tail, for various
specifications of the GPD threshold parameter. For a selection of the
threshold parameter, a GPD is fit on the training data (\code{ytr})
above the threshold using maximum
likelihood (using the \code{gpd.fit} function of package \code{ismev}).
A mean score is estimated from the resulting distribution using
the validation data (\code{yval}).

Smaller scores indicate a better fit of the distribution to the data.
}
\note{
Minimizing the outputted curve is not as simple as just using
something like \code{\link{nlm}}, because the curve is typically
very jagged.
}
\examples{
set.seed(342)
sc <- scorer(space_taus(10))
ytr <- c(-rexp(200), rexp(100))
yval <- c(-rexp(200), rexp(100))

gpd_muplot(ytr, yval, sc)
gpd_muplot(ytr, yval, sc, n=200)
dat <- gpd_muplot(ytr, yval, sc, from=0.5, to=1.5)
dat
}
