% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/append_copula.R
\name{append_copula}
\alias{append_copula}
\title{Fit Bivariate Copula in PCBN}
\usage{
append_copula(v, ucond, tau, cop, QY = identity, g = identity,
  wtau = NULL, prev_cops = NULL, prev_cpars = NULL,
  refit_all = FALSE)
}
\arguments{
\item{v}{Vector of uniform-score observed outcomes.}

\item{ucond}{matrix of uniform conditional predictors.}

\item{cop}{Name of a copula family, without flip qualifier.}

\item{g}{Vectorized function to use for transformation of variables
before estimation. Fed into \code{\link{scoreq}}.}

\item{wtau}{Vectorized function indicating the weight over quantile indices,
used for estimation. Fed into \code{\link{scoreq}}. \code{NULL} for equal
weights (of 1).}

\item{prev_cops}{Names of previous copulas fitted in the pairing order,
matching the order of the columns in \code{ucond}.
Should contain the "flip qualifier" if it has one.}

\item{prev_cpars}{List of previously fitted copula parameters.}

\item{refit_all}{Logical; should all copula parameters in the chain
(i.e. in the pairing order) be re-estimated with the new addition?}

\item{param0}{Starting value for the copula parameter. If blank, I'll try
using VineCopula's}
}
\value{
A list containing

\enumerate{
     \item \code{$cops}, a vector of copula models (with the most recently
     fitted shown last),
     \item \code{$cpars}, a list of copula parameters corresponding to
     the copulas.
     \item \code{$score}, the score of the resulting forecaster on the
     fitting set (i.e. the minimum CNQR objective function)
}
}
\description{
Appends a fitted copula in the pairing order in a PCBN, via CNQR.
}
\note{
\code{ucond} should have \code{length(prev_cops) + 1} columns at least.
Other columns besides those are ignored.

The marginal distribution of the response, \code{QY} is assumed to be the
same for each observation.
}
\examples{
library(CopulaModel)
set.seed(13)
n <- 100
u <- runif(n)
v <- qcondbvtcop(runif(n), u, c(0.9, 10))
append_copula(v, matrix(u), tau=space_taus(10), cop="bvtcop")

## Try fitting a copula in the second position in the pairing order.
append_copula(v, matrix(c(u, runif(n)), ncol=2), tau=space_taus(10), cop="frk",
              prev_cops="bvtcop", prev_cpars=list(c(0.9, 10)))
append_copula(v, matrix(c(u, runif(n)), ncol=2), tau=space_taus(10), cop="frk",
              prev_cops="bvtcop", prev_cpars=list(c(0.9, 10)),
              refit_all = TRUE)
}
